@page
@model FamilymadeShopApp.Pages.CartModel
@{
    @Html.AntiForgeryToken();
}

<section class="h-100 gradient-custom">
    <div class="container py-5">
        <div class="row d-flex justify-content-center my-4">
            <div class="col-md-8">
                <div class="card mb-4">
                    <div class="card-header py-3">
                        <h5 class="mb-0 cart-count-items">Cart - @Model.CartItems.Count items</h5>
                    </div>
                    <div class="card-body cart-items">
                        @foreach (var cartItem in Model.CartItems)
                        {
                            <div class="row product-@cartItem.ProductId">
                                <div class="col-lg-3 col-md-12 mb-4 mb-lg-0">
                                    <div class="bg-image hover-overlay hover-zoom ripple rounded" data-mdb-ripple-color="light">
                                        <a href="/Product?id=@cartItem.ProductId">
                                            <img src="https://via.placeholder.com/650x500" class="w-100" />
                                        </a>
                                    </div>
                                </div>

                                <div class="col-lg-5 col-md-6 mb-4 mb-lg-0">
                                    <p><strong><a asp-page="/Product" asp-route-id="@cartItem.ProductId">@cartItem.Name</a></strong></p>

                                    <button type="button" class="btn btn-danger btn-sm me-1 mb-2" onclick="OnClickRemoveProduct(@cartItem.ProductId)" data-mdb-toggle="tooltip" title="Remove item">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>

                                <div class="col-lg-4 col-md-6 mb-4 mb-lg-0">
                                    <div class="" style=>
                                        <div class="input-group mb-3">
                                            <button class="btn btn-white border border-secondary px-3" type="button" onclick="OnClickDecreaseQuantity(@cartItem.ProductId)">
                                                <i class="fas fa-minus"></i>
                                            </button>
                                            <input class="form-control text-center border border-secondary form-control-quantity-@cartItem.ProductId"
                                                    value="@cartItem.Quantity"
                                                    onchange="OnQuantityChanged(this.value, @cartItem.ProductId)" />
                                            <button class="btn btn-white border border-secondary px-3" type="button" onclick="OnClickIncreaseQuantity(@cartItem.ProductId)">
                                                <i class="fas fa-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                    <p class="text-md-center">
                                        <strong class="product-total-price">€@cartItem.Price.ToString("0.00") x @cartItem.Quantity = €@((cartItem.Price * cartItem.Quantity).ToString("0.00"))</strong>
                                    </p>
                                </div>
                            </div>

                            @if (Model.CartItems.Last() != cartItem)
                            {
                                <hr class="my-4" />
                            }
                        }
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-header py-3">
                        <h5 class="mb-0">Summary</h5>
                    </div>
                    <div class="card-body cart-summary">
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-0">
                                Products
                                <span>
                                    €@(Model.CartItems.Sum(cartItem => cartItem.Price * cartItem.Quantity))
                                </span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center px-0">
                                Shipping
                                @if (User.Identity.IsAuthenticated)
                                {
                                    bool isVIP = false;

                                    if (isVIP)
                                    {
                                        <span>Free</span>
                                    }
                                    else
                                    {
                                        <span>€10,00</span>
                                    }
                                }
                                else
                                {
                                    <span>€10,00</span>
                                }
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 mb-3">
                                <div>
                                    <strong>Total amount</strong>
                                </div>
                                <span>
                                    @if (User.Identity.IsAuthenticated)
                                    {
                                        bool isVIP = false;

                                        if (isVIP)
                                        {
                                            <strong>@(Model.CartItems.Sum(cartItem => cartItem.Price * cartItem.Quantity))</strong>
                                        }
                                        else
                                        {
                                            <strong>€@(Model.CartItems.Sum(cartItem => cartItem.Price * cartItem.Quantity) + 10)</strong>
                                        }
                                    }
                                    else
                                    {
                                        <strong>€@(Model.CartItems.Sum(cartItem => cartItem.Price * cartItem.Quantity) + 10)</strong>
                                    }
                                    
                                </span>
                            </li>
                        </ul>

                        <button type="button" class="btn btn-primary btn-lg btn-block">
                            Go to checkout
                        </button>
                    </div>
                </div>

                <div class="card mb-4">
                    <div class="card-body">
                        <p><strong>Expected shipping delivery</strong></p>
                        <p class="mb-0">@DateTime.Today.AddDays(1).ToString("dd.MM.yyyy") - @DateTime.Today.AddDays(3).ToString("dd.MM.yyyy")</p>
                    </div>
                </div>
                <div class="card mb-4 mb-lg-0">
                    <div class="card-body">
                        <p><strong>We accept</strong></p>
                        <img class="me-2" width="45px"
                             src="https://mdbcdn.b-cdn.net/wp-content/plugins/woocommerce-gateway-stripe/assets/images/visa.svg"
                             alt="Visa" />
                        <img class="me-2" width="45px"
                             src="https://mdbcdn.b-cdn.net/wp-content/plugins/woocommerce-gateway-stripe/assets/images/mastercard.svg"
                             alt="Mastercard" />
@*                         <img class="me-2" width="45px"
                             src="https://mdbcdn.b-cdn.net/wp-content/plugins/woocommerce/includes/gateways/paypal/assets/images/paypal.webp"
                             alt="PayPal acceptance mark" /> *@
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        var isAuthenticated = @User.Identity.IsAuthenticated ? true : false;
        var isVIP = false;

        function OnClickIncreaseQuantity(productId) {
            var quantityInput = document.querySelector(`.form-control-quantity-${productId}`);
            quantityInput.value = parseInt(quantityInput.value) + 1;
            OnQuantityChanged(quantityInput.value, productId)
        };

        function OnClickDecreaseQuantity(productId) {
            var quantityInput = document.querySelector(`.form-control-quantity-${productId}`);
            var newValue = parseInt(quantityInput.value) - 1;
            if (newValue > 0) {
                quantityInput.value = newValue;
                OnQuantityChanged(quantityInput.value, productId)
            }
        };

        function OnQuantityChanged(quantity, productId) {
            var dataToSend = {
                ProductId: productId,
                Quantity: quantity
            };

            fetch('/Cart?handler=ChangeQuantity', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                body: JSON.stringify(dataToSend)
            })
            .then(response => response.text())
            .then(data => {
                var parsedData = JSON.parse(data);
                UpdateCart(parsedData.cartItems);
                UpdateSummary(parsedData.cartItems);
            })
            .catch(error => {
                console.error('Error:', error);
            });
        }

        function OnClickRemoveProduct(productId) {
            var dataToSend = {
                ProductId: productId,
            };

            fetch('/Cart?handler=RemoveProduct', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                body: JSON.stringify(dataToSend)
            })
            .then(response => response.text())
            .then(data => {
                var productCountElement = document.querySelector(`.cart-count-items`);
                var parsedData = JSON.parse(data);
                productCountElement.textContent = `Cart - ${parsedData.cartItems.length} items`;
                UpdateCart(parsedData.cartItems);
                UpdateSummary(parsedData.cartItems);
                UpdateCartBadge();
            })
            .catch(error => {
                console.error('Error:', error);
            });
        }

        function UpdateCart(cartItems) {
            var cartElement = document.querySelector('.cart-items');

            cartElement.innerHTML = '';

            cartItems.forEach((cartItem, index) => {
                var cartItemHtml = `
                    <div class="row product-${cartItem.productId}">
                        <div class="col-lg-3 col-md-12 mb-4 mb-lg-0">
                            <div class="bg-image hover-overlay hover-zoom ripple rounded" data-mdb-ripple-color="light">
                                <a href="/Product?id=${cartItem.productId}">
                                    <img src="https://via.placeholder.com/650x500" class="w-100" />
                                </a>
                            </div>
                        </div>

                        <div class="col-lg-5 col-md-6 mb-4 mb-lg-0">
                           <p><strong><a href="/Product?id=${cartItem.productId}">${cartItem.name}</a></strong></p>


                            <button type="button" class="btn btn-danger btn-sm me-1 mb-2" onclick="OnClickRemoveProduct(${cartItem.productId})" data-mdb-toggle="tooltip" title="Remove item">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>

                        <div class="col-lg-4 col-md-6 mb-4 mb-lg-0">
                            <div class="">
                                <div class="input-group mb-3">
                                    <button class="btn btn-white border border-secondary px-3" type="button" onclick="OnClickDecreaseQuantity(${cartItem.productId})">
                                        <i class="fas fa-minus"></i>
                                    </button>
                                            <input class="form-control text-center border border-secondary form-control-quantity-${cartItem.productId}"
                                        value="${cartItem.quantity}"
                                        onchange="OnQuantityChanged(this.value, ${cartItem.productId})" />
                                    <button class="btn btn-white border border-secondary px-3" type="button" onclick="OnClickIncreaseQuantity(${cartItem.productId})">
                                        <i class="fas fa-plus"></i>
                                    </button>
                                </div>
                            </div>
                            <p class="text-md-center">
                                <strong class="product-total-price">€${cartItem.price.toFixed(2)} x ${cartItem.quantity} = €${(cartItem.price * cartItem.quantity).toFixed(2)}</strong>
                            </p>
                        </div>
                    </div>`;

                cartElement.innerHTML += cartItemHtml;

                if (index !== cartItems.length - 1) {
                    cartElement.innerHTML += '<hr class="my-4" />';
                }
            });
        }

        function UpdateSummary(cartItems) {
            var cartSummaryElement = document.querySelector('.cart-summary');

            var totalPrice = cartItems.reduce((total, cartItem) => total + (cartItem.price * cartItem.quantity), 0);

            var summaryHtml = `
                <ul class="list-group list-group-flush">
                    <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-0">
                        Products
                        <span>€${totalPrice.toFixed(2)}</span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center px-0">
                        Shipping
                        ${isAuthenticated ? (isVIP ? '<span>Free</span>' : '<span>€10.00</span>') : '<span>€10.00</span>'}
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 mb-3">
                        <div>
                            <strong>Total amount</strong>
                        </div>
                        <span>${isAuthenticated ? (isVIP ? `<strong>€${totalPrice.toFixed(2)}</strong>` : `<strong>€${(totalPrice + 10).toFixed(2)}</strong>`) : `<strong>€${(totalPrice + 10).toFixed(2)}</strong>`}</span>
                    </li>
                </ul>

                <button type="button" class="btn btn-primary btn-lg btn-block">
                    Go to checkout
                </button>
            `;

            cartSummaryElement.innerHTML = summaryHtml;
        }
    </script>
}